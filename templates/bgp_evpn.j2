! templates/bgp_evpn.j2
#jinja2: trim_blocks: False
#jinja2: lstrip_blocks: False

{% set bgp_as = bgp.bgp_as %}

{# pull in any missing default parameters for bgp evpn by updating
{# the default dictionary with the input dictionary, then assigning
{# it back to the bgp vlan variable #}
{% set dump = evpn_defaults.update(item) %}
{% set vlans = evpn_defaults %}


{# get the current router bgp config block #}
{% set bgp_block = _eos_config | config_block("router bgp %s" % bgp_as, indent=3) %}

{# enter the bgp configuration block #}

router bgp {{ bgp_as }}

{% if (vlans.state == "absent") %}
   {# remove the vlans if it exists #}
   {% if "vlan %s" % (vlans.id) in bgp_block %}

   no vlan {{ vlans.id }}

   {% endif %}

{% elif (vlans.state == "present") %}
   {% if vlans.id is defined %}

   vlan {{ vlans.id }} 
   
      {# set the route-discriptor for this vlan #}
      {% if vlans.rd is defined %}

      rd {{ vlans.rd }}
   
      {% else %} 

      no rd
     
      {% endif %} 

         {# loop through the route-target types #}
         {% for key, rd in vlans.route_target.iteritems() %}
            {% for value in rd %}
               {% if (key == "import") %}

      route-target import {{ value }} 

               {% elif (key == "export") %}

      route-target export {{ value }}

              {% elif (key == "both") %}

      route-target both {{ value }}

              {% elif (key == "none") %}

      no route-target all

              {% endif %}
       
            {% endfor %}  
         
         {% endfor %}

      {# configure redistribute learned #}
      {% if vlans.redistribute is defined %}
         
      redistribute learned 

      {% else %}

      no redistribute learned

      {% endif %}

   {% endif %}

{% endif %} 



